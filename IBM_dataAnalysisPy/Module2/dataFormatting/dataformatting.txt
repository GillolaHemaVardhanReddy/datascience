DATA FORMATTING :
* data are usually collected from diffrent places and stored in diffrent formats
* bringing data into a common standard of expression allows users to make meaningful comparisions 
* sometimes the wrong data type is assigned to a feature in order to chage type we use
            df.astype(newDataType)
    convert object to int => df["price"].astype(int)
    here object is an object so to convert to int we use as above


--> to rename columns we use df.rename(columns={oldName:newName},inplace=True)

examples why to format are :
people use their own conventions while storing data it becomes
    1. confusing
    2. hard to aggregate 
    3. hard to compare
there are three people surveying people about our problem regarding old cars cost 
1. jagan 
2. hema
3. sharath

non-formatted: 
if jagan notes down horse power as "HP"
and if hema notes down horse power as "HPower"
and sharath notes down horse power as "Horse Power"

so we can't aggregate the whole data now as columns are totally with diffrent names but has same name 
so now we need to come up with one convention and change other data's column name to one that matches each other

after formatting it becomes : we fix with horse power as HP so

formatted :
jagans data stays same as "HP"
hema data changes to "HP"
sharath data changes to "HP"

* now its more clear 
* easy to aggregate
* easy to compare


2nd example : 
    if we have a data set containing speed feature/sttribute and its in kmph 
    but if we want it in mpsec we need to format data
    df["columnName"] = function(df["columnName"])